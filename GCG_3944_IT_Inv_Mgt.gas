Program.Sub.ScreenSU.Start
gui.Form1..create
gui.Form1..caption("IT Asset Information")
gui.Form1..size(9600,6375)
gui.Form1..minx(0)
gui.Form1..miny(0)
gui.Form1..position(0,0)
gui.Form1..event(unload,form1_unload)
gui.Form1..alwaysontop(False)
gui.Form1..fontname("Arial")
gui.Form1..fontsize(8)
gui.Form1..forecolor(0)
gui.Form1..fontstyle(,,,,)
gui.Form1..BackColor(-2147483633)
gui.Form1..controlbox(True)
gui.Form1..maxbutton(True)
gui.Form1..minbutton(True)
gui.Form1..mousepointer(0)
gui.Form1..moveable(True)
gui.Form1..sizeable(True)
gui.Form1..ShowInTaskBar(True)
gui.Form1..titlebar(True)
gui.Form1.lblPartNum.create(label,"Part Number",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.Form1.lblPartNum.defaultvalue("")
gui.Form1.lblPartNum.controlgroup(0)
gui.Form1.txtPartNum.create(textbox,"",True,2595,300,0,200,500,False,0,Arial,8,-2147483643,1)
gui.Form1.txtPartNum.defaultvalue("")
gui.Form1.txtPartNum.controlgroup(0)
gui.Form1.lblPartDesc.create(label,"Part Description",True,1935,255,1,3700,200,True,0,Arial,8,-2147483633,0)
gui.Form1.lblPartDesc.defaultvalue("")
gui.Form1.lblPartDesc.controlgroup(0)
gui.Form1.txtPartDesc.create(textbox,"",True,3750,300,0,3600,500,False,0,Arial,8,-2147483643,1)
gui.Form1.txtPartDesc.defaultvalue("")
gui.Form1.txtPartDesc.controlgroup(0)
gui.Form1.lblAltDesc1.create(label,"Alt. Description 1",True,1935,255,1,200,1000,True,0,Arial,8,-2147483633,0)
gui.Form1.lblAltDesc1.defaultvalue("")
gui.Form1.lblAltDesc1.controlgroup(0)
gui.Form1.txtAltDesc1.create(textbox,"",True,3750,300,0,200,1300,False,0,Arial,8,-2147483643,1)
gui.Form1.txtAltDesc1.defaultvalue("")
gui.Form1.txtAltDesc1.controlgroup(0)
gui.Form1.lblAltDesc2.create(label,"Alt. Description 2",True,1935,270,1,4200,1000,True,0,Arial,8,-2147483633,0)
gui.Form1.lblAltDesc2.defaultvalue("")
gui.Form1.lblAltDesc2.controlgroup(0)
gui.Form1.txtAltDesc2.create(textbox,"",True,3750,300,0,4200,1300,False,0,Arial,8,-2147483643,1)
gui.Form1.txtAltDesc2.defaultvalue("")
gui.Form1.txtAltDesc2.controlgroup(0)
gui.Form1.lblExDesc.create(label,"Extra Description",True,1935,255,1,200,1800,True,0,Arial,8,-2147483633,0)
gui.Form1.lblExDesc.defaultvalue("")
gui.Form1.lblExDesc.controlgroup(0)
gui.Form1.txtExDesc.create(textbox,"",True,3750,300,0,200,2100,False,0,Arial,8,-2147483643,1)
gui.Form1.txtExDesc.defaultvalue("")
gui.Form1.txtExDesc.controlgroup(0)
gui.Form1.gsfgITPart.create(gsflexgrid)
gui.Form1.gsfgITPart.FixedRows(0)
gui.Form1.gsfgITPart.FixedCols(0)
gui.Form1.gsfgITPart.visible(True)
gui.Form1.gsfgITPart.size(8940,2565)
gui.Form1.gsfgITPart.zorder(0)
gui.Form1.gsfgITPart.position(175,3100)
gui.Form1.gsfgITPart.enabled(True)
gui.Form1.gsfgITPart.event(mousedown,gsfgitpart_mousedown)
gui.Form1.gsfgITPart.event(cellenter,gsfgitpart_cellenter)
gui.Form1.gsfgITPart.event(cellexit,gsfgitpart_cellexit)
gui.Form1.gsfgITPart.event(commandclick,gsfgitpart_commandclick)


gui.Form2..create
gui.Form2..caption("IT Asset Information")
gui.Form2..size(3300,2085)
gui.Form2..minx(0)
gui.Form2..miny(0)
gui.Form2..position(0,0)
gui.Form2..event(unload,form2_unload)
gui.Form2..alwaysontop(False)
gui.Form2..fontname("Arial")
gui.Form2..fontsize(8)
gui.Form2..forecolor(0)
gui.Form2..fontstyle(,,,,)
gui.Form2..BackColor(-2147483633)
gui.Form2..controlbox(True)
gui.Form2..maxbutton(True)
gui.Form2..minbutton(True)
gui.Form2..mousepointer(0)
gui.Form2..moveable(True)
gui.Form2..sizeable(True)
gui.Form2..ShowInTaskBar(True)
gui.Form2..titlebar(True)
gui.Form2.txtITTag.create(textbox,"",True,1215,300,0,190,500,True,0,Arial,8,-2147483643,1)
gui.Form2.txtITTag.defaultvalue("")
gui.Form2.txtITTag.controlgroup(0)
gui.Form2.lblITTagID.create(label,"IT Tag ID",True,1020,255,1,190,200,True,0,Arial,8,-2147483633,0)
gui.Form2.lblITTagID.defaultvalue("")
gui.Form2.lblITTagID.controlgroup(0)
gui.Form2.lblWarranty.create(label,"Warranty in Days",True,1935,255,1,1600,200,True,0,Arial,8,-2147483633,0)
gui.Form2.lblWarranty.defaultvalue("")
gui.Form2.lblWarranty.controlgroup(0)
gui.Form2.txtWarranty.create(textbox,"",True,1215,300,0,1600,500,True,0,Arial,8,-2147483643,1)
gui.Form2.txtWarranty.defaultvalue("")
gui.Form2.txtWarranty.controlgroup(0)
gui.Form2.cmdSave.create(button)
gui.Form2.cmdSave.caption("Save")
gui.Form2.cmdSave.visible(True)
gui.Form2.cmdSave.size(855,375)
gui.Form2.cmdSave.zorder(0)
gui.Form2.cmdSave.position(190,1000)
gui.Form2.cmdSave.enabled(True)
gui.Form2.cmdSave.fontname("Arial")
gui.Form2.cmdSave.fontsize(8)
gui.Form2.cmdSave.event(click,cmdsave_click)
gui.Form2.cmdSave.defaultvalue("")
gui.Form2.cmdSave.controlgroup(0)


gui.Form3..create
gui.Form3..caption("Employee IT Asset Assignments")
gui.Form3..size(5805,4080)
gui.Form3..minx(0)
gui.Form3..miny(0)
gui.Form3..position(0,0)
gui.Form3..event(unload,form3_unload)
gui.Form3..alwaysontop(False)
gui.Form3..fontname("Arial")
gui.Form3..fontsize(8)
gui.Form3..forecolor(0)
gui.Form3..fontstyle(,,,,)
gui.Form3..BackColor(-2147483633)
gui.Form3..controlbox(True)
gui.Form3..maxbutton(True)
gui.Form3..minbutton(True)
gui.Form3..mousepointer(0)
gui.Form3..moveable(True)
gui.Form3..sizeable(True)
gui.Form3..ShowInTaskBar(True)
gui.Form3..titlebar(True)
gui.Form3.gsfgEmpAsset.create(gsflexgrid)
gui.Form3.gsfgEmpAsset.FixedRows(0)
gui.Form3.gsfgEmpAsset.FixedCols(0)
gui.Form3.gsfgEmpAsset.visible(True)
gui.Form3.gsfgEmpAsset.size(4425,2175)
gui.Form3.gsfgEmpAsset.zorder(0)
gui.Form3.gsfgEmpAsset.position(200,1100)
gui.Form3.gsfgEmpAsset.enabled(True)
gui.Form3.gsfgEmpAsset.event(commandclick,gsfgempasset_commandclick)
gui.Form3.lblEmpNum.create(label,"Employee Number",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.Form3.lblEmpNum.defaultvalue("")
gui.Form3.lblEmpNum.controlgroup(0)
gui.Form3.txtEmpNum.create(textbox,"",True,1215,300,0,200,600,False,0,Arial,8,-2147483643,1)
gui.Form3.txtEmpNum.defaultvalue("")
gui.Form3.txtEmpNum.controlgroup(0)
gui.Form3.lblEmpName.create(label,"Employee Name",True,1935,255,1,1750,200,True,0,Arial,8,-2147483633,0)
gui.Form3.lblEmpName.defaultvalue("")
gui.Form3.lblEmpName.controlgroup(0)
gui.Form3.txtEmpName.create(textbox,"",True,1980,300,0,1705,600,False,0,Arial,8,-2147483643,1)
gui.Form3.txtEmpName.defaultvalue("")
gui.Form3.txtEmpName.controlgroup(0)
gui.Form3.lblDateAssign.create(label,"Date Assigned",True,1920,255,1,4010,200,True,0,Arial,8,-2147483633,0)
gui.Form3.lblDateAssign.defaultvalue("")
gui.Form3.lblDateAssign.controlgroup(0)
gui.Form3.txtDate.create(textbox,"",True,1215,300,0,4010,600,False,0,Arial,8,-2147483643,1)
gui.Form3.txtDate.defaultvalue("")
gui.Form3.txtDate.controlgroup(0)


gui.Form4..create
gui.Form4..caption("IT Asset Service Request")
gui.Form4..size(12120,4065)
gui.Form4..minx(0)
gui.Form4..miny(0)
gui.Form4..position(0,0)
gui.Form4..event(unload,form4_unload)
gui.Form4..alwaysontop(False)
gui.Form4..fontname("Arial")
gui.Form4..fontsize(8)
gui.Form4..forecolor(0)
gui.Form4..fontstyle(,,,,)
gui.Form4..BackColor(-2147483633)
gui.Form4..controlbox(True)
gui.Form4..maxbutton(True)
gui.Form4..minbutton(True)
gui.Form4..mousepointer(0)
gui.Form4..moveable(True)
gui.Form4..sizeable(True)
gui.Form4..ShowInTaskBar(True)
gui.Form4..titlebar(True)
gui.Form4.gsfgService.create(gsflexgrid)
gui.Form4.gsfgService.FixedRows(0)
gui.Form4.gsfgService.FixedCols(0)
gui.Form4.gsfgService.visible(True)
gui.Form4.gsfgService.size(11445,1845)
gui.Form4.gsfgService.zorder(0)
gui.Form4.gsfgService.position(200,990)
gui.Form4.gsfgService.enabled(True)
gui.Form4.cmdAdd.create(button)
gui.Form4.cmdAdd.caption("Add Request")
gui.Form4.cmdAdd.visible(True)
gui.Form4.cmdAdd.size(1110,375)
gui.Form4.cmdAdd.zorder(0)
gui.Form4.cmdAdd.position(200,3090)
gui.Form4.cmdAdd.enabled(True)
gui.Form4.cmdAdd.fontname("Arial")
gui.Form4.cmdAdd.fontsize(8)
gui.Form4.cmdAdd.event(click,cmdadd_click)
gui.Form4.cmdAdd.defaultvalue("")
gui.Form4.cmdAdd.controlgroup(0)
gui.Form4.cmdRemove.create(button)
gui.Form4.cmdRemove.caption("Remove Request")
gui.Form4.cmdRemove.visible(True)
gui.Form4.cmdRemove.size(1455,375)
gui.Form4.cmdRemove.zorder(0)
gui.Form4.cmdRemove.position(1570,3090)
gui.Form4.cmdRemove.enabled(True)
gui.Form4.cmdRemove.fontname("Arial")
gui.Form4.cmdRemove.fontsize(8)
gui.Form4.cmdRemove.event(click,cmdremove_click)
gui.Form4.cmdRemove.defaultvalue("")
gui.Form4.cmdRemove.controlgroup(0)
gui.Form4.lblITID.create(label,"IT Tag ID",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.Form4.lblITID.defaultvalue("")
gui.Form4.lblITID.controlgroup(0)
gui.Form4.txtITTag.create(textbox,"",True,1215,300,0,200,500,False,0,Arial,8,-2147483643,1)
gui.Form4.txtITTag.defaultvalue("")
gui.Form4.txtITTag.controlgroup(0)


gui.Form5..create
gui.Form5..caption("Enter New Issue")
gui.Form5..size(6270,4320)
gui.Form5..minx(0)
gui.Form5..miny(0)
gui.Form5..position(0,0)
gui.Form5..event(unload,form5_unload)
gui.Form5..alwaysontop(False)
gui.Form5..fontname("Arial")
gui.Form5..fontsize(8)
gui.Form5..forecolor(0)
gui.Form5..fontstyle(,,,,)
gui.Form5..BackColor(-2147483633)
gui.Form5..controlbox(True)
gui.Form5..maxbutton(True)
gui.Form5..minbutton(True)
gui.Form5..mousepointer(0)
gui.Form5..moveable(True)
gui.Form5..sizeable(True)
gui.Form5..ShowInTaskBar(True)
gui.Form5..titlebar(True)
gui.Form5.mltxtIssue.create(textboxm)
gui.Form5.mltxtIssue.text("")
gui.Form5.mltxtIssue.visible(True)
gui.Form5.mltxtIssue.size(5475,2355)
gui.Form5.mltxtIssue.zorder(0)
gui.Form5.mltxtIssue.position(300,600)
gui.Form5.mltxtIssue.enabled(True)
gui.Form5.mltxtIssue.alignment(0)
gui.Form5.mltxtIssue.fontname("Arial")
gui.Form5.mltxtIssue.fontsize(8)
gui.Form5.mltxtIssue.maxLength(250)
gui.Form5.mltxtIssue.BackColor(-2147483643)
gui.Form5.mltxtIssue.defaultvalue("")
gui.Form5.mltxtIssue.controlgroup(0)
gui.Form5.lblIssue.create(label,"Service Request",True,1935,255,1,300,200,True,0,Arial,8,-2147483633,0)
gui.Form5.lblIssue.defaultvalue("")
gui.Form5.lblIssue.controlgroup(0)
gui.Form5.cmdAddIssue.create(button)
gui.Form5.cmdAddIssue.caption("Add")
gui.Form5.cmdAddIssue.visible(True)
gui.Form5.cmdAddIssue.size(855,375)
gui.Form5.cmdAddIssue.zorder(0)
gui.Form5.cmdAddIssue.position(300,3100)
gui.Form5.cmdAddIssue.enabled(True)
gui.Form5.cmdAddIssue.fontname("Arial")
gui.Form5.cmdAddIssue.fontsize(8)
gui.Form5.cmdAddIssue.event(click,cmdaddissue_click)
gui.Form5.cmdAddIssue.defaultvalue("")
gui.Form5.cmdAddIssue.controlgroup(0)


gui.Form6..create
gui.Form6..caption("IT Asset History")
gui.Form6..size(9600,6375)
gui.Form6..minx(0)
gui.Form6..miny(0)
gui.Form6..position(0,0)
gui.Form6..event(unload,form6_unload)
gui.Form6..alwaysontop(False)
gui.Form6..fontname("Arial")
gui.Form6..fontsize(8)
gui.Form6..forecolor(0)
gui.Form6..fontstyle(,,,,)
gui.Form6..BackColor(-2147483633)
gui.Form6..controlbox(True)
gui.Form6..maxbutton(True)
gui.Form6..minbutton(True)
gui.Form6..mousepointer(0)
gui.Form6..moveable(True)
gui.Form6..sizeable(True)
gui.Form6..ShowInTaskBar(True)
gui.Form6..titlebar(True)
gui.Form6.lblITTag.create(label,"IT Tag ID",True,1935,255,1,200,200,True,0,Arial,8,-2147483633,0)
gui.Form6.lblITTag.defaultvalue("")
gui.Form6.lblITTag.controlgroup(0)
gui.Form6.txtITTag.create(textbox,"",True,1215,300,0,200,445,False,0,Arial,8,-2147483643,1)
gui.Form6.txtITTag.defaultvalue("")
gui.Form6.txtITTag.controlgroup(0)
gui.Form6.gsfgHistory.create(gsflexgrid)
gui.Form6.gsfgHistory.FixedRows(0)
gui.Form6.gsfgHistory.FixedCols(0)
gui.Form6.gsfgHistory.visible(True)
gui.Form6.gsfgHistory.size(9045,3225)
gui.Form6.gsfgHistory.zorder(0)
gui.Form6.gsfgHistory.position(200,1000)
gui.Form6.gsfgHistory.enabled(True)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.Global.sRelation.Declare(String)
Variable.Global.iRow.Declare(Long,0)
Variable.Global.dWarranty.Declare(Date,4/23/2014)
Variable.UDT.uHistory.Define("EmpNum",String,Emp_Num)
Variable.UDT.uHistory.Define("DateAssign",Date,Date_Issued)
Variable.UDT.uHistory.Define("DateUnassign",Date,Date_UnIssued)
Variable.UDT.uHistory.Define("EmpName",String,Name)
Variable.uGlobal.uHistory.Declare("uHistory")
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for SQL Query
V.Local.sSql.Declare(String)
'Variable for part
V.Local.sPart.Declare(String)
'Variable for return value
V.Local.iRet.Declare(Long)

F.Intrinsic.Control.If(V.Caller.Hook,=,10120)
	'Set script 1 button Name
	Variable.Passed.000068.Set("IT Asset Part")
	'End
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf



'Check to see if the selected part has IT Assignments
F.Intrinsic.Control.If(V.Caller.Hook,=,10125)
	'Set part number
	V.Local.sPart.Set(V.Passed.000007)
	'Set hidden label
	V.Passed.GAB-LBL-1.Set("IT Part has assignments")
	'open connnection to database
	F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
	'Set location of hidden check box control
	F.Intrinsic.Variable.SetProperty("GAB-CHK-1","PL",90)
	F.Intrinsic.Variable.SetProperty("GAB-CHK-1","PT",30)

	'Set SQL Query
	F.Intrinsic.String.Concat("Select Count (*) From GCG_3944_Part_Track Where IT_Part_Num = '",V.Local.sPart,"' And Employee_Num != ' '",V.Local.sSql)
	'Return count
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.iRet)
	'if no record
	F.Intrinsic.Control.If(V.Local.iRet,=,0)
		'Hide hidden controls
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-CHK-1,"HIDE",1)
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"HIDE",1)
	F.Intrinsic.Control.Else
		'Else set values of the hidden controls
		F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PL",110)
		F.Intrinsic.Variable.SetProperty("GAB-LBL-1","PT",30)
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"LOCK",0)
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-CHK-1,"HIDE",0)
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-LBL-1,"HIDE",0)
		F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-CHK-1,"LOCK",0)
		V.Passed.GAB-CHK-1.Set(1)
'End if
	F.Intrinsic.Control.EndIf

'Close connection
	F.ODBC.Connection!conx.Close
'End
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf



'Check to see if the user tried to enter IT Assets from a new part.
F.Intrinsic.Control.If(V.Caller.Switches,=,"N")
	'If they did let them know only existing parts can be accessed.
	F.Intrinsic.UI.Msgbox("IT Assets can only be accessed for existing parts.","IT Asset Part")
	'End program.
	F.Intrinsic.Control.End
'End if.
F.Intrinsic.Control.EndIf


'V.uGlobal.uHistory.Redim(-1,-1)

'Call Sub buildStyle.
F.Intrinsic.Control.CallSub(Buildstyle)
'Get the part number from screen.
Gui.Form1.txtPartNum.Text(V.Passed.000007)
'Get the part Description from screen.
Gui.Form1.txtPartDesc.Text(V.Passed.000012)
'Open connection to database.
F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
'Call Sub UpdateQty.
F.Intrinsic.Control.CallSub(Updateqty)
V.Local.sSql.Set("")
'Set SQL Query.
F.Intrinsic.String.Concat("Select Part, Description_2, Description_3 From INVENTORY_MST2 Where Part = '",V.Screen.Form1!txtPartNum.Text,"'",V.Local.sSql)
'Open connection to record
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst",V.Local.sSql)
'Check to make sure not at end of file
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,!=,True)
	'Set the Model
	Gui.Form1.txtAltDesc1.Text(V.ODBC.conx!rst.FieldVal!Description_2)
	'Set the Serial number
	Gui.Form1.txtAltDesc2.Text(V.ODBC.conx!rst.FieldVal!Description_3)
	F.Intrinsic.Control.Else
	'If EOF add new
	F.ODBC.conx!rst.AddNew
	'Set Model to the record.
	F.ODBC.conx!rst.Set!Description_2(V.Screen.Form1!txtAltDesc1.Text)
	'Set the Serial number to the record.
	F.ODBC.conx!rst.Set!Description_3(V.Screen.Form1!txtAltDesc2.Text)
	'Set the Part number to the record
	F.ODBC.conx!rst.Set!Part(V.Screen.Form1!txtPartNum.Text)
	'Update record
	F.ODBC.conx!rst.Update
'End if.
F.Intrinsic.Control.EndIf
'Close connection.
F.ODBC.conx!rst.Close
'Clear SQL Variable.
V.Local.sSql.Set("")
'Set SQL Query.
F.Intrinsic.String.Concat("Select part, Text_Line1 from Extra_Text where Part = '",V.Screen.Form1!txtPartNum.Text,"'",V.Local.sSql)
'Open connection to record.
F.ODBC.Connection!conx.OpenRecordsetRW("rst",V.Local.sSql)
'Check to make sure not and eof
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,!=,True)
	'Set screen with the product key
	Gui.Form1.txtExDesc.Text(V.ODBC.conx!rst.FieldVal!Text_Line1)

	F.Intrinsic.Control.Else
	'Else save product key to the record set.
	F.ODBC.conx!rst.Set!Text_Line1(V.Screen.Form1!txtExDesc.Text)
	'Update record.
	F.ODBC.conx!rst.Update
'End if.
F.Intrinsic.Control.EndIf
'Close connection to record.
F.ODBC.conx!rst.Close
'Call sub Loadfg1
F.Intrinsic.Control.CallSub(Loadfg1)
'Show Form 1
Gui.Form1..Show
'Call buildstyle2
F.Intrinsic.Control.CallSub(Buildstyle2)
'Call buildstyle3
F.Intrinsic.Control.CallSub(Buildstyle3)
'Call Buildstyle4
F.Intrinsic.Control.CallSub(Buildstyle4)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

program.sub.gsfgitpart_commandclick.start
F.Intrinsic.Control.SetErrorHandler("gsfgitpart_commandclick_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for Checking if part has Tag ID
V.Local.sCheck.Declare(String)

'Get row user clicked on.
V.Global.iRow.Set(V.Screen.Form1!gsfgITPart.Row)
'Get Rec ID from the grid.
Gui.Form1.gsfgITPart.GetTextMatrix(0,V.Global.iRow,V.Global.sRelation)
'Save the Tag ID
Gui.Form1.gsfgITPart.GetTextMatrix(1,V.Global.iRow,V.Local.sCheck)
'Check to make sure tag ID is not blank
F.Intrinsic.Control.If(V.Local.sCheck,!=,"")
	'Let User know this part has a Tag ID
	F.Intrinsic.UI.Msgbox("This Part Has an IT Tag ID!","IT Tag ID")
F.Intrinsic.Control.Else
	'Else Show form 2
	Gui.Form2..Show
	'Disable form 1
	Gui.Form1..Enabled(False)

	Gui.Form2.txtITTag.TabIndex(0)
	Gui.Form2.txtWarranty.TabIndex(1)
	Gui.Form2.cmdSave.TabIndex(2)
'End if.
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgitpart_commandclick_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfgitpart_commandclick.end

program.sub.form1_unload.start
F.Intrinsic.Control.SetErrorHandler("form1_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Close Connection
F.ODBC.Connection!conx.Close
'End program.
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("form1_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
Function.Intrinsic.Control.EndIf


program.sub.form1_unload.end

Program.Sub.BuildStyle.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Sets the flexgrid so there will be 4 Columns with 2 Rows.  One of the Rows will be fixed so it can contain the titles
Gui.Form1.gsfgITPart.Cols(4)
Gui.Form1.gsfgITPart.Rows(2)
Gui.Form1.gsfgITPart.FixedRows(1)

'Set the Amout of space each Column will take up on the flexgrid
Gui.Form1.gsfgITPart.SetColumnPercentages("0:.30:.40:.30")

'Build Style
'Column 1
'Style 1
Gui.Form1.gsfgITPart.BuildStyle(1,1,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(1,1,"Fontstyle","Bold",True)
Gui.Form1.gsfgITPart.BuildStyle(1,1,"Format","Alignment",4)

'Style 2
Gui.Form1.gsfgITPart.BuildStyle(2,1,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(2,1,"Format","Alignment",2)
Gui.Form1.gsfgITPart.BuildStyle(2,1,"Color","Fore",V.Color.Blue)
Gui.Form1.gsfgITPart.BuildStyle(2,1,"Fontstyle","Underline",True)

'Style 3
Gui.Form1.gsfgITPart.BuildStyle(3,1,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(3,1,"Color","Back","Blue")
Gui.Form1.gsfgITPart.BuildStyle(3,1,"Format","Alignment",2)


'Column 2
'Style 1
Gui.Form1.gsfgITPart.BuildStyle(1,2,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(1,2,"Fontstyle","Bold",True)
Gui.Form1.gsfgITPart.BuildStyle(1,2,"Format","Alignment",4)

'Style 2
Gui.Form1.gsfgITPart.BuildStyle(2,2,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(2,2,"Format","Alignment",2)
Gui.Form1.gsfgITPart.BuildStyle(2,2,"Color","Fore",V.Color.Blue)
Gui.Form1.gsfgITPart.BuildStyle(2,2,"Fontstyle","Underline",True)

'Style 3
Gui.Form1.gsfgITPart.BuildStyle(3,2,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(3,2,"Color","Back","Blue")
Gui.Form1.gsfgITPart.BuildStyle(3,2,"Format","Alignment",2)

'Column 3
'Style1
Gui.Form1.gsfgITPart.BuildStyle(1,3,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(1,3,"Fontstyle","Bold",True)
Gui.Form1.gsfgITPart.BuildStyle(1,3,"Format","Alignment",4)


'Style 2
Gui.Form1.gsfgITPart.BuildStyle(2,3,"Type","Command","Assign")
Gui.Form1.gsfgITPart.BuildStyle(2,3,"Format","Alignment",4)

'Style 3
Gui.Form1.gsfgITPart.BuildStyle(3,3,"Type","Locked",True)
Gui.Form1.gsfgITPart.BuildStyle(3,3,"Color","Back","LtBlue")
Gui.Form1.gsfgITPart.BuildStyle(3,3,"Format","Alignment",4)

'Applies Style 1 to the First Row
Gui.Form1.gsfgITPart.ApplyStyle(0,1)
'Applies Style 2 to the Second Row
Gui.Form1.gsfgITPart.ApplyStyle(1,2)

'Sets the Text for the Header Row of the FlexGrid
Gui.Form1.gsfgITPart.TextMatrix(1,0,"IT Tag ID")
Gui.Form1.gsfgITPart.TextMatrix(2,0,"Currently Assigned")
Gui.Form1.gsfgITPart.TextMatrix(3,0,"Assign Asset IT Tag ID")

'Exit Sub
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("BuildStyle_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildStyle.End

Program.Sub.LoadFG1.Start
F.Intrinsic.Control.SetErrorHandler("LoadFG1_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for SQL Query.
V.Local.sSql.Declare(String)
'Variable for return
V.Local.sRet.Declare(String)
'Variable for number of rows in a flexgrid.
V.Local.iRow.Declare(Long)
'Loop counter
V.Local.iCount.Declare(Long)


'Set SQL Query.
F.Intrinsic.String.Concat("Select  Relation_ID, IT_Tag_ID, Employee_Num From GCG_3944_Part_Track where IT_Part_Num = '",V.Screen.Form1!txtPartNum.Text,"'",V.Local.sSql)
'Open Connection to record.
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
'Hide Flexgrid.
Gui.Form1.gsfgITPart.Visible(False)
'Load Flex Grid.
Gui.Form1.gsfgITPart.LoadRecordset("conx!rst",2)
'Get Row count
V.Local.iRow.Set(V.Screen.Form1!gsfgITPart.Rows)
'Subtract the title and blank row at the bottom of flexgrid.
F.Intrinsic.Math.Sub(V.Local.iRow,2,V.Local.iRow)
'Loop through Flexgrid.
F.Intrinsic.Control.For(V.Local.iCount,1,V.Local.iRow,1)
	'save Value of IT Tag ID
	Gui.Form1.gsfgITPart.GetTextMatrix(1,V.Local.iCount,V.Local.sRet)
	'If Tag ID is Blank
	F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
		'Let user know this Asset does not have a unique Tag ID
		Gui.Form1.gsfgITPart.TextMatrix(2,V.Local.iCount,"IT Asset Without an IT Tag")
	'End if
	F.Intrinsic.Control.EndIf
'Loop to next row.
F.Intrinsic.Control.Next(V.Local.iCount)
'Make the flexgrid visible.
Gui.Form1.gsfgITPart.Visible(True)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("LoadFG1_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.LoadFG1.End

program.sub.gsfgitpart_cellenter.start
F.Intrinsic.Control.SetErrorHandler("gsfgitpart_cellenter_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for Row.
V.Local.iRow.Declare(Long)
'Variable for Column
V.Local.iCol.Declare(Long)

'Find the row the user has clicked
V.Global.iRow.Set(V.Screen.Form1!gsfgITPart.Row)
'Find the Column the user has clicked
V.Local.iCol.Set(V.Screen.Form1!gsfgITPart.Col)
'Change row color
Gui.Form1.gsfgITPart.rowcolor(v.Global.iRow,v.Color.ltcyan,v.Color.Black)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgitpart_cellenter_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfgitpart_cellenter.end

program.sub.gsfgitpart_cellexit.start
F.Intrinsic.Control.SetErrorHandler("gsfgitpart_cellexit_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for row
V.Local.iRow.Declare(Long)
'Find the row the user has left.
V.Local.iRow.Set(V.Screen.Form1!gsfgITPart.Row)
'Change the row color back to default.
Gui.Form1.gsfgITPart.rowcolor(V.Local.iRow,V.Color.White,V.Color.Black)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgitpart_cellexit_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfgitpart_cellexit.end

program.sub.cmdsave_click.start
F.Intrinsic.Control.SetErrorHandler("cmdsave_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable to hold SQL Query.
V.Local.sSql.Declare(String)




'Gui.Form1.gsfgITPart.GetTextMatrix(0,V.Local.iRow,V.Local.sRelation)
'Set SQL Query.
F.Intrinsic.String.Concat("Select IT_Part_Num, IT_Tag_ID, Employee_Num, Relation_ID, Warranty_Length,Warranty_Start From GCG_3944_Part_Track where IT_Part_Num = '",V.Screen.Form1!txtPartNum.Text,"' and Relation_ID = '",V.Global.sRelation.Trim,"'",V.Local.sSql)
'Open connection to the record.
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst",V.Local.sSql)
'Check to make sure IT Tag is not Empty.
F.Intrinsic.Control.If(V.Screen.Form2!txtITTag.Text,!=,"")
	'Check to make sure Warranty is not empty.
	F.Intrinsic.Control.If(V.Screen.Form2!txtWarranty.Text,!=,"")
		'Set the IT Tag ID in the record.
		F.ODBC.conx!rst.Set!IT_Tag_ID(V.Screen.Form2!txtITTag.Text)
		'Set the warranty length in the record.
		F.ODBC.conx!rst.Set!Warranty_Length(V.Screen.Form2!txtWarranty.Text)
		'Set the Warranty start date in the record.
		F.ODBC.conx!rst.Set!Warranty_Start(V.Ambient.Date)
		'Update the record.
		F.ODBC.conx!rst.Update
		'Set the IT Tag ID on the Flexgrid.
		Gui.Form1.gsfgITPart.TextMatrix(1,V.Global.iRow,V.Screen.Form2!txtITTag.Text)
		'This part is yet assigned to Anyone so no employee number is entered.
		Gui.Form1.gsfgITPart.TextMatrix(2,V.Global.iRow,"")
		'Apply Style 2 to the row.
		Gui.Form1.gsfgITPart.ApplyStyle(V.Global.iRow,2)
		'Clear the IT Tag ID
		Gui.Form2.txtITTag.Text("")
		'Clear the Warranty.
		Gui.Form2.txtWarranty.Text("")
		Gui.Form2.txtITTag.SetFocus

		'Hide Form 2
		Gui.Form2..Visible(False)
		'Close Connection.
		F.ODBC.conx!rst.Close
		'Call Sub to unload Form 2
		F.Intrinsic.Control.CallSub(Form2_unload)
	F.Intrinsic.Control.Else
		'Else if the Warranty box is empty prompt user for the Length.
		F.Intrinsic.UI.Msgbox("Please enter the Warranty Length in Days!","Warranty")
	'End IF
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	'Else if the IT Tag ID is empty Prompt user for the Tag ID.
	F.Intrinsic.UI.Msgbox("Please enter the IT Tag ID!","IT Tag ID")
'End if.
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdsave_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdsave_click.end

program.sub.form2_unload.start
F.Intrinsic.Control.SetErrorHandler("form2_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Hide From 2
Gui.Form2..Visible(False)
'Enable From 1
Gui.Form1..Enabled(True)
'Exit Sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("form2_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.form2_unload.end

Program.Sub.UpdateQty.Start
F.Intrinsic.Control.SetErrorHandler("UpdateQty_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable for part number
V.Local.sPartNum.Declare(String)
'Variable for SQL Query.
V.Local.sSql.Declare(String)
'Variable for return value
V.Local.iRet.Declare(String)
'Variable for quantity.
V.Local.iQty.Declare(Long)
'Variable for count.
V.Local.iCount.Declare(Long)
'Variable for rec id.
V.Local.iRecID.Declare(Long)

'Set Part number.
V.Local.sPartNum.Set(V.Screen.Form1!txtPartNum.Text)
'Seq SQL Query.
F.Intrinsic.String.Concat("Select Count (*) From GCG_3944_Part_Track where IT_Part_Num = '",V.Local.sPartNum,"'",V.Local.sSql)
'Get the count of the number or records.
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.iRet)
'Clear SQL variable.
V.Local.sSql.Set("")
'Set SQL Query.
F.Intrinsic.String.Concat("Select Part, Qty_Onhand from Inventory_MSTR where Part = '",V.Local.sPartNum,"'",V.Local.sSql)
'Open connection to record.
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
'Set the Quantity that is on hand.
V.Local.iQty.Set(V.ODBC.conx!rst.FieldVal!Qty_Onhand)
'Close connection to record.
F.ODBC.conx!rst.Close
'Set SQL Query.
V.Local.sSql.Set("Select * From GCG_3944_Part_Track")
'Open connection to record.
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst",V.Local.sSql)
'Check to see if the quantity on hand is greater then the number with IT Tags
F.Intrinsic.Control.If(V.Local.iQty,>,V.Local.iRet)
	'Subtract the Quantity from the number already set up.
	F.Intrinsic.Math.Sub(V.Local.iQty,V.Local.iRet,V.Local.iRet)
	'Loop through each part
	F.Intrinsic.Control.For(V.Local.iCount,1,V.Local.iRet,1)
		'give each part a rec id
		f.ODBC.Connection!conx.GetID("GCG_3944_Part_Track","Relation_ID",True,v.Local.iRecID)
		'Add new record
		F.ODBC.conx!rst.AddNew
		'Set part number
		F.ODBC.conx!rst.Set!IT_Part_Num(V.Local.sPartNum)
		'set the rec id
		F.ODBC.conx!rst.Set!Relation_ID(V.Local.iRecID)
		'Update the record.
		F.ODBC.conx!rst.Update
	'loop to next.
	F.Intrinsic.Control.Next(V.Local.iCount)
'Close connection.
F.ODBC.conx!rst.Close
'End if
F.Intrinsic.Control.EndIf
'Exit sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("UpdateQty_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.UpdateQty.End

program.sub.gsfgitpart_mousedown.start
F.Intrinsic.Control.SetErrorHandler("gsfgitpart_mousedown_Err")
F.Intrinsic.Control.ClearErrors
'
V.Local.sError.Declare(String)
'Variable for Row.
V.Local.iRow.Declare(Long)
'Variable for Column
V.Local.iCol.Declare(Long)

V.Local.iCount.Declare(Long)

'Variable for Employee number.
V.Local.sEmpNum.Declare(String)
'Variable for Employee Name.
V.Local.sEmpName.Declare(String)
'Variable for Tag ID
V.Local.sTag.Declare(String)
'Variable for Issue
V.Local.sIssue.Declare(String)
'Variable for date.
V.Local.sDate.Declare(String)
'variable for SQL Query.
V.Local.sSql.Declare(String)

'Set row user clicked
V.Local.iRow.Set(V.Screen.Form1!gsfgITPart.Row)
'Set Column user clicked.
V.Local.iCol.Set(V.Screen.Form1!gsfgITPart.Col)
'Get Employee Number
Gui.Form1.gsfgITPart.GetTextMatrix(2,V.Local.iRow,V.Local.sEmpNum)
'Get Rec ID
Gui.Form1.gsfgITPart.GetTextMatrix(0,V.Local.iRow,V.Global.sRelation)
'Get IT Tag ID
Gui.Form1.gsfgITPart.GetTextMatrix(1,V.Local.iRow,V.Local.sTag)

'Check to see if user clicked in the Currently assigned Column
F.Intrinsic.Control.If(V.Local.iCol,=,2)
	'Check to see if the the IT Tag is not assigned or without an IT Tag ID.
	F.Intrinsic.Control.If(V.Local.sEmpNum,=,"",OR,v.local.sEmpNum,=,"IT Asset Without an IT Tag")

	F.Intrinsic.Control.Else
		'Else Set Sql Query
		F.Intrinsic.String.Concat("Select Name from Employee_MSTR where Employee = '",V.Local.sEmpNum,"'",V.Local.sSql)
		'Open connection to record
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
		'Set Employee Name
		V.Local.sEmpName.Set(V.ODBC.conx!rst.FieldVal!Name)
		'Close Connection.
		F.ODBC.conx!rst.Close
		'Clear SQL Query variable.
		V.Local.sSql.Set("")
		'Set SQL Query.
		F.Intrinsic.String.Concat("Select Relation_ID, IT_Tag_ID, Assigned_Date from GCG_3944_Part_Track where Relation_ID = '",V.Global.sRelation,"'",V.Local.sSql)
		'Open Connection to record
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
		'Save the date it was assigned
		V.Local.sDate.Set(V.ODBC.conx!rst.FieldVal!Assigned_Date)
'		F.ODBC.conx!rst.Close
		'Save the Employee Number to screen
		Gui.Form3.txtEmpNum.Text(V.Local.sEmpNum)
		'Save the Employee Name to screen
		Gui.Form3.txtEmpName.Text(V.Local.sEmpName)
		'Save date to Screen
		Gui.Form3.txtDate.Text(V.Local.sDate)
'		F.Intrinsic.Control.If(V.Local.sIssue.Trim,!=,"")
			'Load Record set to flexgrid
			Gui.Form3.gsfgEmpAsset.LoadRecordset("conx!rst",2)
			'Close Connection.
			F.ODBC.conx!rst.Close

'		F.Intrinsic.Control.EndIf
		'Show form 3
		Gui.Form3..Show
		'Disable form 1
		Gui.Form1..Enabled(False)
	'End If.
	F.Intrinsic.Control.EndIf
'End if.
F.Intrinsic.Control.EndIf

'Clear SQL Variable.
V.Local.sSql.Set("")

'check to see if the user clicked in the IT Tag ID column
F.Intrinsic.Control.If(V.Local.iCol,=,1)

	'Check to see if the Tag ID is not blank
	F.Intrinsic.Control.If(V.Local.sTag,!=,"")
		'Save Tag ID to form 6 screen
		Gui.Form6.txtITTag.Text(V.Local.sTag)
		'Set SQL Query.
		F.Intrinsic.String.Concat("Select GCG_3944_Part_Hist.Emp_Num, GCG_3944_Part_Hist.Date_Issued, GCG_3944_Part_Hist.Date_UnIssued, Employee_MSTR.Name From GCG_3944_Part_Hist inner Join Employee_MSTR on GCG_3944_Part_Hist.Emp_Num=Employee_MSTR.Employee Where GCG_3944_Part_Hist.IT_Tag = '",V.Local.sTag,"'",V.Local.sSql)
		'Open connection to record
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
		'Load UDT from the record
		F.Intrinsic.Variable.LoadUDTFromRecordset("conx","rst","v.uGlobal.uHistory",False)
		'Close Connection.
		F.ODBC.conx!rst.Close
		'Load Flexgrid from UDT
		Gui.Form6.gsfgHistory.LoadFromUDT("v.uGlobal.uHistory","EmpNum*!*EmpName*!*DateAssign*!*DateUnassign",2)
		'Show Form 6
		Gui.Form6..Show
		'Disable from 1
		Gui.Form1..Enabled(False)
	'End if
	F.Intrinsic.Control.EndIf
'End if.
F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgitpart_mousedown_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf

program.sub.gsfgitpart_mousedown.end

program.sub.form3_unload.start
F.Intrinsic.Control.SetErrorHandler("form3_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Hide Form 3
Gui.Form3..Visible(False)
'Enable From 1
Gui.Form1..Enabled(True)
'Exit Sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("form3_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.form3_unload.end

Program.Sub.BuildStyle2.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle2_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Sets the FlexGrid so there will be 4 Columns with 2 Rows.  One Row will be fixed so it can contain the titles.
Gui.Form3.gsfgEmpAsset.Cols(4)
Gui.Form3.gsfgEmpAsset.Rows(2)
Gui.Form3.gsfgEmpAsset.FixedRows(1)
'Sets the amount of space each column will use on the flexgrid.
Gui.Form3.gsfgEmpAsset.SetColumnPercentages(".0:.0:.0:1")

'Column 3
'Style 1
Gui.Form3.gsfgEmpAsset.BuildStyle(1,3,"Type","Locked",True)
Gui.Form3.gsfgEmpAsset.BuildStyle(1,3,"Format","Alignment",4)
Gui.Form3.gsfgEmpAsset.BuildStyle(1,3,"Fontstyle","Bold",True)

'Style 2
Gui.Form3.gsfgEmpAsset.BuildStyle(2,3,"Format","Alignment",4)
Gui.Form3.gsfgEmpAsset.BuildStyle(2,3,"Type","Command","View Request")

'Applies Style 1 to Row 1.
Gui.Form3.gsfgEmpAsset.ApplyStyle(0,1)
'Applies Style 2 to Row 2
Gui.Form3.gsfgEmpAsset.ApplyStyle(1,2)

'Sets the Title for the Column.
Gui.Form3.gsfgEmpAsset.TextMatrix(3,0,"Service Request")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("BuildStyle2_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildStyle2.End

program.sub.gsfgempasset_commandclick.start
F.Intrinsic.Control.SetErrorHandler("gsfgempasset_commandclick_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable to hold SQL Query
V.Local.sSql.Declare(String)
'Variable to hold ID
V.Local.sID.Declare(String)
'Variable to hold return
V.Local.sRet.Declare(String)
'Variable to hold Length.
V.Local.sLength.Declare(String)
'Variable to hold row # for flexgrid on form 3.
V.Local.iRow.Declare(Long)
'Variable to hold Row count for flexgrid on form 4
V.Local.iCount.Declare(Long)
'Variable to hold loop count
V.Local.iLoop.Declare(Long)
'V.Local.dWarranty.Declare(Date)
'Variable to hold Service date.
V.Local.dService.Declare(Date)

'Get the Row from Form 3
V.Local.iRow.Set(V.Screen.Form3!gsfgEmpAsset.Row)
'Get the ID from that row
Gui.Form3.gsfgEmpAsset.GetTextMatrix(1,V.Local.iRow,V.Local.sID)
'Set the text box on form 4 with that ID.
Gui.Form4.txtITTag.Text(V.Local.sID)
'Set SQL Query.
F.Intrinsic.String.Concat("Select Rec_ID, Warranty_Date, Issue, Emp_Num, User_ID, Service_Date From GCG_3944_Part_Serv Where IT_Tag_ID = '",V.Local.sID,"'",V.Local.sSql)
'Open connection to the record set.
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
'Load Flexgrid with the record.
Gui.Form4.gsfgService.LoadRecordset("conx!rst",2)
'Close connection.
F.ODBC.conx!rst.Close
'Clear the SQL Variable
V.Local.sSql.Set("")
'Set the SQL Query.
F.Intrinsic.String.Concat("Select Warranty_Length From GCG_3944_Part_Track where IT_Tag_ID = '",V.Local.sID,"'",V.Local.sSql)
'Open connection to the record set.
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
'Save the Warranty Length.
V.Local.sLength.Set(V.ODBC.conx!rst.FieldVal!Warranty_Length)
'Close Connection.
F.ODBC.conx!rst.Close
'Determine the number of rows on the flexgrid.
V.Local.iCount.Set(V.Screen.Form4!gsfgService.Rows)
'Subtract the title and blank row from the count.
F.Intrinsic.Math.Sub(V.Local.iCount,2,V.Local.iCount)

'Loop through the flexgrid.
F.Intrinsic.Control.For(V.Local.iLoop,1,V.Local.iCount,1)
	'Get the warranty date
	Gui.Form4.gsfgService.GetTextMatrix(1,V.Local.iLoop,V.Global.dWarranty)
	'Get the service date
	Gui.Form4.gsfgService.GetTextMatrix(5,V.Local.iLoop,V.Local.dService)
	'Determine the difference
	F.Intrinsic.Date.DateDiff("d",V.Global.dWarranty,V.Local.dService,V.Local.sRet)
	'Check if under warranty.
	F.Intrinsic.Control.If(V.Local.sRet,<,V.Local.sLength)
		'Set flag to Y if it is
		Gui.Form4.gsfgService.TextMatrix(1,V.Local.iLoop,"Y")
	F.Intrinsic.Control.Else
		'Set Flag to N  if is not
		Gui.Form4.gsfgService.TextMatrix(1,V.Local.iLoop,"N")
	'End If
	F.Intrinsic.Control.EndIf
'Loop to next row
F.Intrinsic.Control.Next(V.Local.iLoop)
'Show form 4
Gui.Form4..Show
'Disable form 3
Gui.Form3..Enabled(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("gsfgempasset_commandclick_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.gsfgempasset_commandclick.end

program.sub.cmdadd_click.start
F.Intrinsic.Control.SetErrorHandler("cmdadd_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Show form 5
Gui.Form5..show
'Disable form 4
Gui.Form4..Enabled(False)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdadd_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdadd_click.end

program.sub.cmdremove_click.start
F.Intrinsic.Control.SetErrorHandler("cmdremove_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable to hold row count.
V.Local.iRow.Declare(Long)
'Variable to hold loop count.
V.Local.iCounter.Declare(Long)
'Variable to hold return value.
V.Local.sRet.Declare(String)
'Variable to hold SQL Query.
V.Local.sSql.Declare(String)

'Set the row number
V.Local.iRow.Set(V.Screen.Form4!gsfgService.Rows)
'Subtract 1 from the count.
F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)

'Loop through the flexgrid.
F.Intrinsic.Control.For(V.Local.iCounter,1,V.Local.iRow,1)
	'Read the current row.
	Gui.Form4.gsfgService.ReadRow(V.Local.iCounter,V.Local.sRet)
	'Split the return string.
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	'Check to see if the remove Service Request is checked.
	F.Intrinsic.Control.If(V.Local.sRet(6),=,1)
		'If it is set SQL Query.
		F.Intrinsic.String.Concat("Select * From GCG_3944_Part_Serv where Rec_ID = '",V.Local.sRet(0),"'",V.Local.sSql)
		'Open connection to the record set.
		F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst",V.Local.sSql)
		'Delete the record.
		F.ODBC.conx!rst.Delete
		'Remove style from that row of the flexgrid.
		Gui.Form4.gsfgService.RemoveStyle(V.Local.iCounter)
		'Subtract 1 from the counter.
		F.Intrinsic.Math.Sub(V.Local.iCounter,1,V.Local.iCounter)
		'Delete the row.
		Gui.Form4.gsfgService.DeleteRow(V.Local.iCounter)
		'Subtract 1 from the number of rows
		F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
		Gui.Form1.gsfgITPart.ApplyStyle(V.Local.iRow,2)
		'Close connection to the record
		F.ODBC.conx!rst.Close
	'End If
	F.Intrinsic.Control.EndIf
'Loop to the next row of the flexgrid.
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmdremove_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdremove_click.end

program.sub.form4_unload.start
F.Intrinsic.Control.SetErrorHandler("form4_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Hide Form 4
Gui.Form4..Visible(False)
'Enable form 3
Gui.Form3..Enabled(True)
'Exit Sub.
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("form4_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.form4_unload.end

Program.Sub.BuildStyle3.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle3_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Set the Flexgrid to have 7 columns with 2 rows.  One of the rows will be fixed so it can hold the Titles.
Gui.Form4.gsfgService.Cols(7)
Gui.Form4.gsfgService.Rows(2)
Gui.Form4.gsfgService.FixedRows(1)
'Set the amount of space each column will take up on the flexgrid.
Gui.Form4.gsfgService.SetColumnPercentages("0:.10:.50:.10:.10:.10:.10")

'Build Style
'Column 1
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,1,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,1,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,1,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,1,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(2,1,"Format","Alignment",4)

'Column 2
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,2,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,2,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,2,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,2,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(2,2,"Format","Alignment",2)

'Column 3
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,3,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,3,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,3,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,3,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(2,3,"Format","Alignment",2)

'Column 4
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,4,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,4,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,4,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,4,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(2,4,"Format","Alignment",2)

'Column 5
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,5,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,5,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,5,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,5,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(2,5,"Format","Alignment",2)

'Column 6
'Style 1
Gui.Form4.gsfgService.BuildStyle(1,6,"Type","Locked",True)
Gui.Form4.gsfgService.BuildStyle(1,6,"Fontstyle","Bold",True)
Gui.Form4.gsfgService.BuildStyle(1,6,"Format","Alignment",4)

'Style 2
Gui.Form4.gsfgService.BuildStyle(2,6,"Format","Alignment",4)
Gui.Form4.gsfgService.BuildStyle(2,6,"Type","Checkbox",False)

'Apply style 1 to row 0
Gui.Form4.gsfgService.ApplyStyle(0,1)
'Apply style 2 to row 1.
Gui.Form4.gsfgService.ApplyStyle(1,2)
'Set the Titles for each column.
Gui.Form4.gsfgService.TextMatrix(1,0,"Warranty")
Gui.Form4.gsfgService.TextMatrix(2,0,"Problem")
Gui.Form4.gsfgService.TextMatrix(3,0,"Employee")
Gui.Form4.gsfgService.TextMatrix(4,0,"User")
Gui.Form4.gsfgService.TextMatrix(5,0,"Date")
Gui.Form4.gsfgService.TextMatrix(6,0,"Close Request")
'Exit sub
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("BuildStyle3_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildStyle3.End

program.sub.cmdaddissue_click.start
F.Intrinsic.Control.SetErrorHandler("cmdaddissue_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable to hold IT Problem
V.Local.sIssue.Declare(String)
'Variable to hold SQL Query
V.Local.sSql.Declare(String)
'Variable to hold user
V.Local.sUser.Declare(String)
'Variable to hold Warranty
V.Local.sWarranty.Declare(String)
'Variable to hold Warranty length
V.Local.sLength.Declare(String)
'Variable to hold row count.
V.Local.iRow.Declare(Long)
'Variable to hold return value.
V.Local.iRet.Declare(Long)

'Set the IT Problem.
V.Local.sIssue.Set(V.Screen.Form5!mltxtIssue.Text)
'Set the SQL Query.
V.Local.sSql.Set("Select * From GCG_3944_Part_Serv")
'Set the user.
V.Local.sUser.Set(V.Caller.User)
'get unique number to add to table.
f.ODBC.Connection!conx.GetID("GCG_3944_Part_Serv","Rec_ID",True,v.Local.iRet)
'Open connection to the record.
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rst",V.Local.sSql)
'Add New Record.
F.ODBC.conx!rst.AddNew
'Set the Issue
F.ODBC.conx!rst.Set!Issue(V.Local.sIssue)
'Set the IT Tag ID
F.ODBC.conx!rst.Set!IT_Tag_ID(V.Screen.Form4!txtITTag.Text)
'Set the Employee number.
F.ODBC.conx!rst.Set!Emp_Num(V.Screen.Form3!txtEmpNum.Text)
'Set the user
F.ODBC.conx!rst.Set!User_ID(V.local.sUser.Trim)
'Set the date
F.ODBC.conx!rst.Set!Service_Date(V.Ambient.Date)
'Set the warranty date.
F.ODBC.conx!rst.Set!Warranty_Date(V.Global.dWarranty)
'Set the record id.
F.ODBC.conx!rst.Set!Rec_ID(V.Local.iRet)
'Update the record.
F.ODBC.conx!rst.Update
'Close the connection to the record.
F.ODBC.conx!rst.Close
'Clear SQL variable.
V.Local.sSql.Set("")
'Set the SQL Variable.
F.Intrinsic.String.Concat("Select Warranty_Length From GCG_3944_Part_Track where IT_Tag_ID = '",V.Screen.Form4!txtITTag.Text,"'",V.Local.sSql)
'Open connection to the record
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rst",V.Local.sSql)
'Set the Warranty Length Variable.
V.Local.sLength.Set(V.ODBC.conx!rst.FieldVal!Warranty_Length)
'Close Connection.
F.ODBC.conx!rst.Close
'Determine if the Issue occured while under warranty.
F.Intrinsic.Date.DateDiff("d",V.Global.dWarranty,V.Ambient.Date,V.Local.sWarranty)
'check if issue happened under warranty
F.Intrinsic.Control.If(V.Local.swarranty,<,V.Local.sLength)
	'If if did set flag to Y
	V.Local.sWarranty.Set("Y")
F.Intrinsic.Control.Else
	'Else set the flag to N
	V.Local.sWarranty.Set("N")
'End if.
F.Intrinsic.Control.EndIf
'Set the Variable for the flexgrid row count.
V.Local.iRow.Set(V.Screen.Form4!gsfgService.Rows)
'Subtract one from the count.
F.Intrinsic.Math.Sub(V.Local.iRow,1,V.Local.iRow)
'Add the rec ID to the new row.
Gui.Form4.gsfgService.TextMatrix(0,V.Local.iRow,V.Local.iRet)
'Add the Warranty to the new row.
Gui.Form4.gsfgService.TextMatrix(1,V.Local.iRow,V.Local.sWarranty)
'Add the issue to the new row.
Gui.Form4.gsfgService.TextMatrix(2,V.Local.iRow,V.Local.sIssue)
'Add the Employee number to the new row
Gui.Form4.gsfgService.TextMatrix(3,V.Local.iRow,V.Screen.Form3!txtEmpNum.Text)
'Add the user to the new row.
Gui.Form4.gsfgService.TextMatrix(4,V.Local.iRow,V.Local.sUser.Trim)
'Add the service date to the new row.
Gui.Form4.gsfgService.TextMatrix(5,V.Local.iRow,V.Ambient.Date)
'Apply style 2 to the new row.
Gui.Form4.gsfgService.ApplyStyle(V.Local.iRow,2)
'Add 2 rows to the flexgrid.  This will leave a blank row at the bottom.
F.Intrinsic.Math.Add(V.Local.iRow,2,V.Local.iRow)
'Update the Rows.
Gui.Form4.gsfgService.Rows(V.Local.iRow)
'clear Problem from the multiline text box.
Gui.Form5.mltxtIssue.Text("")
'Make form 5 not visible.
Gui.Form5..Visible(False)

Gui.Form4..Enabled(True)
'Exit sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("cmdaddissue_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.cmdaddissue_click.end

program.sub.form5_unload.start
F.Intrinsic.Control.SetErrorHandler("form5_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Hide Form 5
Gui.Form5..Visible(False)
'Enable form 4
Gui.Form4..Enabled(True)
'Exit sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("form5_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.form5_unload.end

program.sub.form6_unload.start
F.Intrinsic.Control.SetErrorHandler("form6_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Hide Form 6
Gui.Form6..Visible(False)
'Enable form 1
Gui.Form1..Enabled(True)
'Exit Sub.
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("form6_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


program.sub.form6_unload.end

Program.Sub.BuildStyle4.Start
F.Intrinsic.Control.SetErrorHandler("BuildStyle4_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Sets the flexgrid to have 4 columns with 2 rows.  One row will be fixed to hold the Titles.
Gui.Form6.gsfgHistory.Cols(4)
Gui.Form6.gsfgHistory.Rows(2)
Gui.Form6.gsfgHistory.FixedRows(1)
'Set the amount of space each column will take up on the flexgrid.
Gui.Form6.gsfgHistory.SetColumnPercentages(".20:.40:.20:.20")

'Build Style
'Column 0
'Style 1
Gui.Form6.gsfgHistory.BuildStyle(1,0,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(1,0,"Fontstyle","Bold",True)
Gui.Form6.gsfgHistory.BuildStyle(1,0,"Format","Alignment",4)

'Style 2
Gui.Form6.gsfgHistory.BuildStyle(2,0,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(2,0,"Format","Alignment",2)

'Column 1
'Style 1
Gui.Form6.gsfgHistory.BuildStyle(1,1,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(1,1,"Fontstyle","Bold",True)
Gui.Form6.gsfgHistory.BuildStyle(1,1,"Format","Alignment",4)

'Style 2
Gui.Form6.gsfgHistory.BuildStyle(2,1,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(2,1,"Format","Alignment",2)

'Column 2
'Style 1
Gui.Form6.gsfgHistory.BuildStyle(1,2,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(1,2,"Fontstyle","Bold",True)
Gui.Form6.gsfgHistory.BuildStyle(1,2,"Format","Alignment",4)

'Style 2
Gui.Form6.gsfgHistory.BuildStyle(2,2,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(2,2,"Format","Alignment",2)

'Column 3
'Style 1
Gui.Form6.gsfgHistory.BuildStyle(1,3,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(1,3,"Fontstyle","Bold",True)
Gui.Form6.gsfgHistory.BuildStyle(1,3,"Format","Alignment",4)

'Style 2
Gui.Form6.gsfgHistory.BuildStyle(2,3,"Type","Locked",True)
Gui.Form6.gsfgHistory.BuildStyle(2,3,"Format","Alignment",2)
'Apply style 1 to row 0
Gui.Form6.gsfgHistory.ApplyStyle(0,1)
'Apply Style 2 to row 1
Gui.Form6.gsfgHistory.ApplyStyle(1,2)
'Set the titles for the flexgrid.
Gui.Form6.gsfgHistory.TextMatrix(0,0,"Employee Number")
Gui.Form6.gsfgHistory.TextMatrix(1,0,"Employee Name")
Gui.Form6.gsfgHistory.TextMatrix(2,0,"Date Assigned")
Gui.Form6.gsfgHistory.TextMatrix(3,0,"Date Unassigned")
'Exit the sub.
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Label("BuildStyle4_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3944_IT_Inv_Mgt.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Form1_unload)
Function.Intrinsic.Control.EndIf


Program.Sub.BuildStyle4.End


